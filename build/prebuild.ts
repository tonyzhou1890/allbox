/**
 * The purpose of this file is to generate index.ts and some packages' source code.
 * see scripts in package.json
 */
const fs = require('fs')
const path = require('path')
const helper = require('./helpers')

function genIndex() {
  // get filenames in src
  const files = fs
    .readdirSync(path.join(__dirname, '../src'))
    .filter(
      (item: string) => path.extname(item) === '.ts' && path.basename(item, '.ts') !== 'index'
    )
  // concat imports text
  const imports = files
    .map((item: string) => {
      const filename = path.basename(item, '.ts')
      // return `import ${filename.replace('.', '_')} from './${filename}'`
      const pathArr = filename.split('.')
      // return `import ${[...pathArr.slice(0, -1), helper.camelize(pathArr[pathArr.length - 1])].join(
      //   '_'
      // )} from './${filename}'`
      return `import ${pathArr
        .map((item: string) => helper.camelize(item))
        .join('_')} from './${filename}'`
    })
    .join('\r\n')
  // concat exports text
  //   const exports = `
  // const Allbox = {
  //   ${files.map((item: string) => path.basename(item, '.ts')).join(',\r\n  ')}
  // }
  // export default Allbox
  //   `
  const exports = `
const Allbox = ${helper.genStrFromObj(
    helper.genObjectFromFilenameStrArr(files.map((item: string) => path.basename(item, '.ts')))
  )}

export default Allbox
  `
  const indexFile = `// This file is generated by build/prebuild.\r\n${imports}\r\n${exports}`
  fs.writeFileSync(path.join(__dirname, '../src/index.ts'), indexFile)
  console.log(files)
  console.log(indexFile)
}

genIndex()
